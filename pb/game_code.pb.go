// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: game_code.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ErrCode int32

const (
	OK                     ErrCode = 0
	NotEnoughDiamond       ErrCode = 1
	NotEnoughCoin          ErrCode = 2
	NotInRoom              ErrCode = 3
	UsernameOrPwdError     ErrCode = 4
	PhoneNumberError       ErrCode = 5
	LoginError             ErrCode = 6
	UsernameEmpty          ErrCode = 7
	NameTooLong            ErrCode = 8
	PhoneNumberEnpty       ErrCode = 9
	PwdEmpty               ErrCode = 10
	PwdFormatError         ErrCode = 11
	PhoneRegisted          ErrCode = 12
	RegistError            ErrCode = 13
	UserDataNotExist       ErrCode = 14
	WechatLoingFailReAuth  ErrCode = 15
	GetWechatUserInfoFail  ErrCode = 16
	PayOrderFail           ErrCode = 17
	PayOrderError          ErrCode = 18
	RoomNotExist           ErrCode = 19
	RoomFull               ErrCode = 20
	CreateRoomFail         ErrCode = 21
	OperateError           ErrCode = 22
	NiuCardError           ErrCode = 23
	NiuValueError          ErrCode = 24
	BetValueError          ErrCode = 25
	GameStarted            ErrCode = 26
	NotInRoomCannotLeave   ErrCode = 27
	GameStartedCannotLeave ErrCode = 28
	StartedNotKick         ErrCode = 29
	RunningNotVote         ErrCode = 30
	VotingCantLaunchVote   ErrCode = 31
	NotVoteTime            ErrCode = 32
	NotInPrivateRoom       ErrCode = 33
	OtherLoginThisAccount  ErrCode = 34
	BeDealerNotEnough      ErrCode = 35
	SitNotEnough           ErrCode = 36
	SitDownFailed          ErrCode = 37
	BetDealerFailed        ErrCode = 38
	BetNotSeat             ErrCode = 39
	BetTopLimit            ErrCode = 40
	GameNotStart           ErrCode = 41
	StandUpFailed          ErrCode = 42
	DealerSitFailed        ErrCode = 43
	BeDealerAlreadySit     ErrCode = 44
	BeDealerAlready        ErrCode = 45
	DepositNumberError     ErrCode = 46
	DrawMoneyNumberError   ErrCode = 47
	GiveNumberError        ErrCode = 48
	GiveUseridError        ErrCode = 49
	GiveTooMuch            ErrCode = 50
	NotBankrupt            ErrCode = 51
	NotRelieves            ErrCode = 52
	NotPrizeDraw           ErrCode = 53
	NotGotPrizeDraw        ErrCode = 54
	BoxNotYet              ErrCode = 55
	NotBox                 ErrCode = 56
	NotTimes               ErrCode = 57
	AppleOrderFail         ErrCode = 58
	MatchClassicFail       ErrCode = 59
	EnterClassicNotEnough  ErrCode = 60
	NotWinning             ErrCode = 61
	AlreadyWinning         ErrCode = 62
	NotVip                 ErrCode = 63
	NotVipTimes            ErrCode = 64
	AlreadyInRoom          ErrCode = 65
	NotYourTurn            ErrCode = 66
	ErrorOperateValue      ErrCode = 67
	Failed                 ErrCode = 68
	RepeatLogin            ErrCode = 69
	VipTooLow              ErrCode = 70
	ChipNotEnough          ErrCode = 71
	BetSeatWrong           ErrCode = 72
	NotDealerRoom          ErrCode = 73
	SmsCodeEmpty           ErrCode = 74
	SmsCodeWrong           ErrCode = 75
	SmsCodeExpired         ErrCode = 76
	ResetPwdFaild          ErrCode = 77
	PhoneNotRegist         ErrCode = 78
	TouristInoperable      ErrCode = 79
	SafetycodeEmpty        ErrCode = 80
	SafetycodeNotExist     ErrCode = 81
	DealerDownFail         ErrCode = 82
	MatchFail              ErrCode = 83
	EnterFail              ErrCode = 84
	NotReady               ErrCode = 85
	AlreadyFold            ErrCode = 86
	AlreadyAllin           ErrCode = 87
	CallError              ErrCode = 88
	RaiseError             ErrCode = 89
	AlreadyAward           ErrCode = 90
	AwardFaild             ErrCode = 91
	AlreadyPrize           ErrCode = 92
	PwdError               ErrCode = 93
	BankNotOpen            ErrCode = 94
	BankAlreadyOpen        ErrCode = 95
	AlreadySitDown         ErrCode = 96
	SignTooLong            ErrCode = 97
	ChangeFailed           ErrCode = 98
	AlreadyBuild           ErrCode = 99
	ParamError             ErrCode = 100
	AgentNotExist          ErrCode = 101
	AgentLevelLow          ErrCode = 102
	NotAgent               ErrCode = 103
	AlreadyAgent           ErrCode = 104
	WaitForAudit           ErrCode = 105
)

var ErrCode_name = map[int32]string{
	0:   "OK",
	1:   "NotEnoughDiamond",
	2:   "NotEnoughCoin",
	3:   "NotInRoom",
	4:   "UsernameOrPwdError",
	5:   "PhoneNumberError",
	6:   "LoginError",
	7:   "UsernameEmpty",
	8:   "NameTooLong",
	9:   "PhoneNumberEnpty",
	10:  "PwdEmpty",
	11:  "PwdFormatError",
	12:  "PhoneRegisted",
	13:  "RegistError",
	14:  "UserDataNotExist",
	15:  "WechatLoingFailReAuth",
	16:  "GetWechatUserInfoFail",
	17:  "PayOrderFail",
	18:  "PayOrderError",
	19:  "RoomNotExist",
	20:  "RoomFull",
	21:  "CreateRoomFail",
	22:  "OperateError",
	23:  "NiuCardError",
	24:  "NiuValueError",
	25:  "BetValueError",
	26:  "GameStarted",
	27:  "NotInRoomCannotLeave",
	28:  "GameStartedCannotLeave",
	29:  "StartedNotKick",
	30:  "RunningNotVote",
	31:  "VotingCantLaunchVote",
	32:  "NotVoteTime",
	33:  "NotInPrivateRoom",
	34:  "OtherLoginThisAccount",
	35:  "BeDealerNotEnough",
	36:  "SitNotEnough",
	37:  "SitDownFailed",
	38:  "BetDealerFailed",
	39:  "BetNotSeat",
	40:  "BetTopLimit",
	41:  "GameNotStart",
	42:  "StandUpFailed",
	43:  "DealerSitFailed",
	44:  "BeDealerAlreadySit",
	45:  "BeDealerAlready",
	46:  "DepositNumberError",
	47:  "DrawMoneyNumberError",
	48:  "GiveNumberError",
	49:  "GiveUseridError",
	50:  "GiveTooMuch",
	51:  "NotBankrupt",
	52:  "NotRelieves",
	53:  "NotPrizeDraw",
	54:  "NotGotPrizeDraw",
	55:  "BoxNotYet",
	56:  "NotBox",
	57:  "NotTimes",
	58:  "AppleOrderFail",
	59:  "MatchClassicFail",
	60:  "EnterClassicNotEnough",
	61:  "NotWinning",
	62:  "AlreadyWinning",
	63:  "NotVip",
	64:  "NotVipTimes",
	65:  "AlreadyInRoom",
	66:  "NotYourTurn",
	67:  "ErrorOperateValue",
	68:  "Failed",
	69:  "RepeatLogin",
	70:  "VipTooLow",
	71:  "ChipNotEnough",
	72:  "BetSeatWrong",
	73:  "NotDealerRoom",
	74:  "SmsCodeEmpty",
	75:  "SmsCodeWrong",
	76:  "SmsCodeExpired",
	77:  "ResetPwdFaild",
	78:  "PhoneNotRegist",
	79:  "TouristInoperable",
	80:  "SafetycodeEmpty",
	81:  "SafetycodeNotExist",
	82:  "DealerDownFail",
	83:  "MatchFail",
	84:  "EnterFail",
	85:  "NotReady",
	86:  "AlreadyFold",
	87:  "AlreadyAllin",
	88:  "CallError",
	89:  "RaiseError",
	90:  "AlreadyAward",
	91:  "AwardFaild",
	92:  "AlreadyPrize",
	93:  "PwdError",
	94:  "BankNotOpen",
	95:  "BankAlreadyOpen",
	96:  "AlreadySitDown",
	97:  "SignTooLong",
	98:  "ChangeFailed",
	99:  "AlreadyBuild",
	100: "ParamError",
	101: "AgentNotExist",
	102: "AgentLevelLow",
	103: "NotAgent",
	104: "AlreadyAgent",
	105: "WaitForAudit",
}
var ErrCode_value = map[string]int32{
	"OK":                     0,
	"NotEnoughDiamond":       1,
	"NotEnoughCoin":          2,
	"NotInRoom":              3,
	"UsernameOrPwdError":     4,
	"PhoneNumberError":       5,
	"LoginError":             6,
	"UsernameEmpty":          7,
	"NameTooLong":            8,
	"PhoneNumberEnpty":       9,
	"PwdEmpty":               10,
	"PwdFormatError":         11,
	"PhoneRegisted":          12,
	"RegistError":            13,
	"UserDataNotExist":       14,
	"WechatLoingFailReAuth":  15,
	"GetWechatUserInfoFail":  16,
	"PayOrderFail":           17,
	"PayOrderError":          18,
	"RoomNotExist":           19,
	"RoomFull":               20,
	"CreateRoomFail":         21,
	"OperateError":           22,
	"NiuCardError":           23,
	"NiuValueError":          24,
	"BetValueError":          25,
	"GameStarted":            26,
	"NotInRoomCannotLeave":   27,
	"GameStartedCannotLeave": 28,
	"StartedNotKick":         29,
	"RunningNotVote":         30,
	"VotingCantLaunchVote":   31,
	"NotVoteTime":            32,
	"NotInPrivateRoom":       33,
	"OtherLoginThisAccount":  34,
	"BeDealerNotEnough":      35,
	"SitNotEnough":           36,
	"SitDownFailed":          37,
	"BetDealerFailed":        38,
	"BetNotSeat":             39,
	"BetTopLimit":            40,
	"GameNotStart":           41,
	"StandUpFailed":          42,
	"DealerSitFailed":        43,
	"BeDealerAlreadySit":     44,
	"BeDealerAlready":        45,
	"DepositNumberError":     46,
	"DrawMoneyNumberError":   47,
	"GiveNumberError":        48,
	"GiveUseridError":        49,
	"GiveTooMuch":            50,
	"NotBankrupt":            51,
	"NotRelieves":            52,
	"NotPrizeDraw":           53,
	"NotGotPrizeDraw":        54,
	"BoxNotYet":              55,
	"NotBox":                 56,
	"NotTimes":               57,
	"AppleOrderFail":         58,
	"MatchClassicFail":       59,
	"EnterClassicNotEnough":  60,
	"NotWinning":             61,
	"AlreadyWinning":         62,
	"NotVip":                 63,
	"NotVipTimes":            64,
	"AlreadyInRoom":          65,
	"NotYourTurn":            66,
	"ErrorOperateValue":      67,
	"Failed":                 68,
	"RepeatLogin":            69,
	"VipTooLow":              70,
	"ChipNotEnough":          71,
	"BetSeatWrong":           72,
	"NotDealerRoom":          73,
	"SmsCodeEmpty":           74,
	"SmsCodeWrong":           75,
	"SmsCodeExpired":         76,
	"ResetPwdFaild":          77,
	"PhoneNotRegist":         78,
	"TouristInoperable":      79,
	"SafetycodeEmpty":        80,
	"SafetycodeNotExist":     81,
	"DealerDownFail":         82,
	"MatchFail":              83,
	"EnterFail":              84,
	"NotReady":               85,
	"AlreadyFold":            86,
	"AlreadyAllin":           87,
	"CallError":              88,
	"RaiseError":             89,
	"AlreadyAward":           90,
	"AwardFaild":             91,
	"AlreadyPrize":           92,
	"PwdError":               93,
	"BankNotOpen":            94,
	"BankAlreadyOpen":        95,
	"AlreadySitDown":         96,
	"SignTooLong":            97,
	"ChangeFailed":           98,
	"AlreadyBuild":           99,
	"ParamError":             100,
	"AgentNotExist":          101,
	"AgentLevelLow":          102,
	"NotAgent":               103,
	"AlreadyAgent":           104,
	"WaitForAudit":           105,
}

func (ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorGameCode, []int{0} }

type SitType int32

const (
	SitDown SitType = 0
	SitUp   SitType = 1
)

var SitType_name = map[int32]string{
	0: "SitDown",
	1: "SitUp",
}
var SitType_value = map[string]int32{
	"SitDown": 0,
	"SitUp":   1,
}

func (SitType) EnumDescriptor() ([]byte, []int) { return fileDescriptorGameCode, []int{1} }

// 代理玩家管理状态
type AgentApproveState int32

const (
	AgentApprove AgentApproveState = 0
	AgentAgreed  AgentApproveState = 1
	AgentRefused AgentApproveState = 2
)

var AgentApproveState_name = map[int32]string{
	0: "AgentApprove",
	1: "AgentAgreed",
	2: "AgentRefused",
}
var AgentApproveState_value = map[string]int32{
	"AgentApprove": 0,
	"AgentAgreed":  1,
	"AgentRefused": 2,
}

func (AgentApproveState) EnumDescriptor() ([]byte, []int) { return fileDescriptorGameCode, []int{2} }

func init() {
	proto.RegisterEnum("pb.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterEnum("pb.SitType", SitType_name, SitType_value)
	proto.RegisterEnum("pb.AgentApproveState", AgentApproveState_name, AgentApproveState_value)
}
func (x ErrCode) String() string {
	s, ok := ErrCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x SitType) String() string {
	s, ok := SitType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AgentApproveState) String() string {
	s, ok := AgentApproveState_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() { proto.RegisterFile("game_code.proto", fileDescriptorGameCode) }

var fileDescriptorGameCode = []byte{
	// 1208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x56, 0xd9, 0x7a, 0xdb, 0x54,
	0x10, 0xb6, 0x03, 0x4d, 0x5b, 0x75, 0xc9, 0x44, 0x5d, 0x68, 0x0b, 0x18, 0xca, 0x4e, 0x28, 0x65,
	0x29, 0xfb, 0xee, 0x25, 0x49, 0x43, 0x1d, 0xd9, 0xd8, 0x4e, 0x42, 0xd9, 0xca, 0x89, 0x35, 0x91,
	0xce, 0x17, 0xe9, 0x1c, 0x7d, 0x47, 0x23, 0x27, 0xe1, 0x8a, 0x47, 0xe0, 0x31, 0x78, 0x14, 0x2e,
	0x7b, 0xc9, 0x05, 0x17, 0xc4, 0xdc, 0x70, 0xd9, 0x47, 0xe0, 0x9b, 0xa3, 0x63, 0x47, 0xe5, 0xce,
	0xfa, 0x35, 0xf3, 0xcf, 0xf6, 0xcf, 0x58, 0xde, 0x52, 0x24, 0x52, 0x7c, 0x30, 0xd6, 0x21, 0xde,
	0xce, 0x8c, 0x26, 0xed, 0x2f, 0x64, 0xbb, 0x2b, 0x7f, 0x2d, 0x79, 0xa7, 0x57, 0x8d, 0x69, 0xeb,
	0x10, 0xfd, 0x45, 0x6f, 0xa1, 0x77, 0x0f, 0x6a, 0xfe, 0x65, 0x0f, 0x02, 0x4d, 0xab, 0x4a, 0x17,
	0x51, 0xdc, 0x91, 0x22, 0xd5, 0x2a, 0x84, 0xba, 0xbf, 0xec, 0x5d, 0x98, 0xa3, 0x6d, 0x2d, 0x15,
	0x2c, 0xf8, 0x17, 0xbc, 0xb3, 0x81, 0xa6, 0x0d, 0x35, 0xd0, 0x3a, 0x85, 0x27, 0xfc, 0xab, 0x9e,
	0xbf, 0x95, 0xa3, 0x51, 0x22, 0xc5, 0x9e, 0xe9, 0x1f, 0x84, 0xab, 0xc6, 0x68, 0x03, 0x4f, 0x32,
	0x5f, 0x3f, 0xd6, 0x0a, 0x83, 0x22, 0xdd, 0x45, 0x53, 0xa2, 0xa7, 0xfc, 0x8b, 0x9e, 0xd7, 0xd5,
	0x91, 0x54, 0xe5, 0xf3, 0x22, 0xf3, 0xcf, 0xbc, 0x57, 0xd3, 0x8c, 0x8e, 0xe0, 0xb4, 0xbf, 0xe4,
	0x9d, 0x0b, 0x44, 0x8a, 0x23, 0xad, 0xbb, 0x5a, 0x45, 0x70, 0xe6, 0xff, 0x4c, 0x8a, 0xcd, 0xce,
	0xfa, 0xe7, 0xbd, 0x33, 0x1c, 0xcd, 0x3a, 0x79, 0xbe, 0xef, 0x5d, 0xec, 0x1f, 0x84, 0x6b, 0xda,
	0xa4, 0x82, 0x4a, 0xee, 0x73, 0xcc, 0x6d, 0xfd, 0x06, 0x18, 0xc9, 0x9c, 0x30, 0x84, 0xf3, 0xcc,
	0x5d, 0x3e, 0x95, 0x36, 0x17, 0x98, 0x9b, 0xe3, 0x77, 0x04, 0x09, 0xae, 0xf3, 0x50, 0xe6, 0x04,
	0x17, 0xfd, 0xeb, 0xde, 0x95, 0x1d, 0x1c, 0xc7, 0x82, 0xba, 0x5a, 0xaa, 0x68, 0x4d, 0xc8, 0x64,
	0x80, 0xcd, 0x82, 0x62, 0x58, 0xe2, 0x57, 0xeb, 0x48, 0xe5, 0x5b, 0xf6, 0xdc, 0x50, 0x7b, 0x9a,
	0x0d, 0x00, 0x7c, 0xf0, 0xce, 0xf7, 0xc5, 0x51, 0xcf, 0x84, 0x68, 0x2c, 0xb2, 0x6c, 0x33, 0x70,
	0x48, 0x19, 0xd0, 0x67, 0x23, 0x6e, 0xdc, 0x3c, 0xd8, 0x25, 0x2e, 0x84, 0x91, 0xb5, 0x22, 0x49,
	0xe0, 0x32, 0x17, 0xd2, 0x36, 0x28, 0x08, 0x2d, 0xc6, 0x34, 0x57, 0xd8, 0xa7, 0x97, 0xa1, 0x11,
	0x84, 0x25, 0xcb, 0x55, 0x46, 0x02, 0x59, 0xb4, 0x85, 0x71, 0xed, 0x7e, 0xca, 0x0e, 0x4a, 0x16,
	0xdb, 0x22, 0x29, 0x9c, 0xd1, 0x35, 0x86, 0x5a, 0x48, 0x15, 0xe8, 0x3a, 0xd7, 0xbf, 0x2e, 0x52,
	0x1c, 0x92, 0x30, 0xdc, 0x90, 0x1b, 0xfe, 0x35, 0xef, 0xf2, 0x7c, 0x98, 0x6d, 0xa1, 0x94, 0xa6,
	0x2e, 0x8a, 0x09, 0xc2, 0xd3, 0xfe, 0x0d, 0xef, 0x6a, 0xc5, 0xb4, 0xfa, 0xee, 0x19, 0x4e, 0xd2,
	0xe1, 0x81, 0xa6, 0x7b, 0x72, 0xbc, 0x0f, 0xcf, 0x32, 0x36, 0x28, 0x94, 0x92, 0x2a, 0x0a, 0x34,
	0x6d, 0x6b, 0x42, 0x68, 0x30, 0xfb, 0xb6, 0x26, 0xa9, 0xa2, 0xb6, 0x50, 0xd4, 0x15, 0x85, 0x1a,
	0xc7, 0xf6, 0xcd, 0x73, 0x76, 0xc8, 0xa5, 0xd9, 0x48, 0xa6, 0x08, 0xcf, 0x3b, 0xf9, 0x6d, 0xa8,
	0xbe, 0x91, 0x13, 0x57, 0x3d, 0xdc, 0xe4, 0x6e, 0xf7, 0x28, 0x46, 0x63, 0x35, 0x33, 0x8a, 0x65,
	0xde, 0x1c, 0x8f, 0x75, 0xa1, 0x08, 0x5e, 0xf0, 0xaf, 0x78, 0xcb, 0x2d, 0xec, 0xa0, 0x48, 0xd0,
	0xcc, 0x15, 0x0a, 0x2f, 0x72, 0x67, 0x86, 0x92, 0x4e, 0x90, 0x97, 0xb8, 0x0d, 0x43, 0x49, 0x1d,
	0x7d, 0xa0, 0xb8, 0x9d, 0x18, 0xc2, 0xcb, 0xfe, 0x25, 0x6f, 0xa9, 0x85, 0x54, 0x3a, 0x3b, 0xf0,
	0x15, 0x96, 0x66, 0x0b, 0xd9, 0x73, 0x88, 0x82, 0xe0, 0x55, 0x4e, 0xb1, 0x85, 0x34, 0xd2, 0x59,
	0x57, 0xa6, 0x92, 0xe0, 0x35, 0xa6, 0xe6, 0x8e, 0xb0, 0x05, 0x17, 0x0f, 0xaf, 0x5b, 0x6a, 0x12,
	0x2a, 0xdc, 0xca, 0x1c, 0xcb, 0x0a, 0x53, 0x97, 0xbc, 0x43, 0x49, 0x0e, 0x7c, 0x83, 0x77, 0x64,
	0x96, 0x6b, 0x33, 0x31, 0x28, 0xc2, 0xa3, 0xa1, 0x24, 0xb8, 0x55, 0xe6, 0xf1, 0x18, 0x0e, 0x6f,
	0xb2, 0x71, 0x07, 0x33, 0x9d, 0x4b, 0xaa, 0xae, 0xce, 0x6d, 0x6e, 0x66, 0xc7, 0x88, 0x83, 0x4d,
	0xad, 0xf0, 0xa8, 0xfa, 0xe6, 0x2d, 0xa6, 0x59, 0x97, 0x93, 0xc7, 0x36, 0xed, 0xed, 0x19, 0xc8,
	0x1a, 0x95, 0x4e, 0x25, 0xef, 0xd8, 0xf9, 0xcb, 0x09, 0xef, 0xd6, 0x66, 0x31, 0x8e, 0xe1, 0x5d,
	0x37, 0x87, 0x96, 0x50, 0xfb, 0xa6, 0xc8, 0x08, 0xee, 0x38, 0x60, 0x80, 0x89, 0xc4, 0x09, 0xe6,
	0xf0, 0x9e, 0x95, 0x9a, 0xa6, 0xbe, 0x91, 0xbf, 0x20, 0x87, 0x87, 0xf7, 0x99, 0x39, 0xd0, 0xb4,
	0x5e, 0x05, 0x3f, 0xe0, 0xab, 0xd0, 0xd2, 0x87, 0x81, 0xa6, 0xfb, 0x48, 0xf0, 0xa1, 0xef, 0x79,
	0x8b, 0xcc, 0xab, 0x0f, 0xe1, 0x23, 0x16, 0x78, 0xa0, 0x89, 0xe7, 0x9c, 0xc3, 0xc7, 0xac, 0x93,
	0x66, 0x96, 0x25, 0x78, 0xb2, 0x27, 0x9f, 0xf0, 0xf0, 0x37, 0x05, 0x8d, 0xe3, 0x76, 0x22, 0xf2,
	0x5c, 0x8e, 0x2d, 0xfa, 0x29, 0x0f, 0x7f, 0x55, 0x11, 0x1a, 0x87, 0x9e, 0xcc, 0xf4, 0x33, 0x9e,
	0x55, 0xa0, 0x69, 0x47, 0x5a, 0xbd, 0xc1, 0xe7, 0x96, 0xb4, 0x6c, 0xe0, 0x0c, 0xfb, 0xc2, 0xa5,
	0xb0, 0x2d, 0x33, 0xf8, 0x72, 0x26, 0x37, 0x99, 0x95, 0x59, 0x7c, 0xc5, 0x93, 0x73, 0x0e, 0xee,
	0x90, 0x35, 0x9d, 0xcd, 0x7d, 0x5d, 0x98, 0x51, 0x61, 0x14, 0xb4, 0x58, 0x61, 0xb6, 0x6f, 0x6e,
	0xf7, 0xec, 0x22, 0x41, 0x9b, 0x79, 0xdd, 0x60, 0x3b, 0xe5, 0x3d, 0xc9, 0x90, 0x0f, 0x45, 0x24,
	0x15, 0xac, 0x72, 0x1b, 0x38, 0x0a, 0xdf, 0xae, 0x03, 0x58, 0xe3, 0x30, 0xed, 0x58, 0x66, 0x27,
	0xa9, 0xaf, 0x73, 0x3f, 0x5b, 0x68, 0x35, 0xb6, 0x63, 0xf8, 0xbe, 0xdd, 0x75, 0x37, 0xb6, 0x94,
	0x81, 0xcd, 0x65, 0xc3, 0xaa, 0x38, 0xcd, 0xf9, 0x3e, 0x97, 0x07, 0xee, 0xeb, 0x0a, 0x52, 0xba,
	0xdd, 0xb3, 0x4b, 0xe8, 0x6c, 0x0e, 0x33, 0x69, 0x30, 0x84, 0x2e, 0x53, 0x0d, 0x30, 0x47, 0xe2,
	0x5b, 0x28, 0x64, 0x12, 0xc2, 0xa6, 0xbd, 0x8c, 0xf6, 0x7a, 0xf2, 0x54, 0xf9, 0xf4, 0x41, 0xc0,
	0x95, 0x8d, 0x74, 0x61, 0x64, 0x4e, 0x1b, 0x4a, 0x73, 0x75, 0xbb, 0x09, 0x42, 0x8f, 0x07, 0x3b,
	0x14, 0x7b, 0x48, 0x47, 0xe3, 0x79, 0xe0, 0x3e, 0xcb, 0xf1, 0x04, 0x9c, 0x9f, 0xad, 0x6f, 0x98,
	0xb7, 0x4c, 0x79, 0xb6, 0x59, 0x30, 0xe0, 0xea, 0xed, 0x1c, 0xed, 0xe3, 0x90, 0x1f, 0xed, 0x00,
	0xed, 0xe3, 0xc8, 0xe9, 0x60, 0x60, 0x65, 0xbe, 0xc5, 0xad, 0x73, 0x13, 0x58, 0xd3, 0x49, 0x08,
	0xdb, 0x5c, 0xa1, 0x03, 0x9a, 0x49, 0x22, 0x15, 0xec, 0xb0, 0x7f, 0x5b, 0x24, 0x49, 0x29, 0xde,
	0x6f, 0x79, 0xe8, 0x03, 0x21, 0x73, 0x77, 0xcc, 0xee, 0x57, 0x1d, 0x0e, 0x84, 0x09, 0xe1, 0x3b,
	0xb6, 0xb0, 0x3f, 0xcb, 0xda, 0xbf, 0xaf, 0x58, 0x58, 0xa9, 0xc2, 0x0f, 0xb3, 0x7f, 0x0d, 0xcb,
	0xf0, 0xa3, 0x5d, 0x71, 0xa1, 0xf6, 0x03, 0x4d, 0xbd, 0x0c, 0x15, 0xfc, 0x64, 0x17, 0x52, 0xa8,
	0x7d, 0xe7, 0x64, 0xc1, 0x07, 0x15, 0x71, 0xb9, 0x3b, 0x02, 0x3f, 0xb3, 0xe7, 0x50, 0x46, 0x6a,
	0xf6, 0x27, 0x25, 0x38, 0x54, 0x3b, 0x16, 0x2a, 0x42, 0xa7, 0x8d, 0xdd, 0x4a, 0xf0, 0x56, 0xc1,
	0xe9, 0x8c, 0x39, 0xbd, 0xbe, 0x30, 0x22, 0x2d, 0xc3, 0x87, 0x56, 0x84, 0x11, 0x2a, 0x9a, 0x77,
	0x15, 0xe7, 0x50, 0x17, 0x27, 0x98, 0xb0, 0x86, 0xf6, 0x5c, 0xdb, 0x2c, 0x0a, 0x51, 0xb5, 0x68,
	0x8b, 0xc4, 0x8c, 0xec, 0x08, 0x49, 0x6b, 0xda, 0x34, 0x8b, 0x50, 0x12, 0xc8, 0x95, 0x9b, 0xde,
	0xe9, 0xa1, 0xa4, 0xd1, 0x51, 0x86, 0xfe, 0x39, 0xfb, 0xd3, 0x26, 0x5d, 0xf3, 0xcf, 0x7a, 0xa7,
	0x86, 0x92, 0xb6, 0x32, 0xa8, 0xaf, 0xdc, 0xf5, 0x96, 0xad, 0x7f, 0x33, 0xcb, 0x8c, 0x9e, 0xf0,
	0x95, 0x27, 0xb4, 0xdc, 0x15, 0x10, 0x6a, 0x76, 0x48, 0x16, 0x89, 0x0c, 0x22, 0x7f, 0x0f, 0xcc,
	0x4c, 0x06, 0xb8, 0x57, 0xe4, 0x18, 0xc2, 0x42, 0xeb, 0xd6, 0xc3, 0xe3, 0x46, 0xed, 0xcf, 0xe3,
	0x46, 0xed, 0xd1, 0x71, 0xa3, 0xfe, 0xeb, 0xb4, 0x51, 0xff, 0x7d, 0xda, 0xa8, 0xff, 0x31, 0x6d,
	0xd4, 0x1f, 0x4e, 0x1b, 0xf5, 0xbf, 0xa7, 0x8d, 0xfa, 0xbf, 0xd3, 0x46, 0xed, 0xd1, 0xb4, 0x51,
	0xff, 0xed, 0x9f, 0x46, 0x6d, 0x77, 0xd1, 0x7e, 0x84, 0xdc, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0xa1, 0x85, 0x8b, 0x13, 0x97, 0x08, 0x00, 0x00,
}
