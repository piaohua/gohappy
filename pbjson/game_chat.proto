syntax = "proto3";
package pb;
import "game_code.proto";

// 房间广播文字聊天
message CChatText
{
    string content = 1;
}

// 广播文字聊天
message SChatText
{
    uint32 seat    = 1;
    string userid  = 2;
    string content = 3;
    ErrCode error   = 4; // 错误码
}

// 房间广播语音聊天
message CChatVoice
{
    string content = 1;
}

// 广播语音聊天
message SChatVoice
{
    uint32 seat    = 1;
    string userid  = 2;
    string content = 3;
    ErrCode error   = 4; // 错误码
}

// 世界广播
message SBroadcast
{
    uint32 rtype   = 1;//消息类型 1.活动公告,2.世界广播
    uint32 num     = 2;//1=播放1次,2=播放2次
    string content = 3;//消息内容
}

// 公告列表
message CNotice
{
    uint32 page = 1; //页数,每页30,默认发1最近30场
    string userid  = 2;//玩家id,server参数
}

message SNotice
{
    uint32 page = 1; //页数,每页30,默认发1最近30场
    repeated Notice list = 2;
    ErrCode error = 3; // 错误码
}

// 新消息推送
message SPushNotice
{
    Notice info = 1;
    string userid  = 2;//玩家id,server参数
}

message Notice
{
    int32 rtype   = 1;//消息类型 0.购买消息
    int32 acttype = 2;//操作类型 1.支付消息
    string content = 3;//消息内容
    string time = 4;//消息创建时间
    string expireTime = 5;//消息过期时间
}

// 私人局,发起投票申请语音房间
message CChatLaunchVote
{
}

message SChatLaunchVote
{
    uint32 seat = 1; //发起人玩家座位号
    ErrCode error= 2;//错误码 ,0:正常
}

// 私人局,发起投票加入语音房间
message CChatVote
{
    uint32 vote = 1; //1同意,2不同意
}

message SChatVote
{
    uint32 vote = 1; //1同意,2不同意
    uint32 seat = 2; //投票玩家座位号
    ErrCode error= 3;//错误码 ,0:正常
}

// 投票加入语音房间事件结果,服务器主动推送
message SChatVoteResult
{
    //0半数通过马上加入语音房间,
    //1半数以上不通过终止语音房间
    uint32 vote = 1;
}

// 加入语音房间
message CChatVoiceJoin
{
}

message SChatVoiceJoin
{
    uint32 seat = 1; //玩家座位号
    ErrCode error= 2;//错误码 ,0:正常
}

// 离开语音房间
message CChatVoiceLeft
{
}

message SChatVoiceLeft
{
    uint32 seat = 1; //玩家座位号
    ErrCode error= 2;//错误码 ,0:正常
}